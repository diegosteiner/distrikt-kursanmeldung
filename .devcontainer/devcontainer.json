// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "node",
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": "./docker-compose.yml",
	"service": "app",

	// Use this environment variable if you need to bind mount your local source code into a new container.
	// "remoteEnv": {
	// 	"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	// },
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	// "service": "node",
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/app",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "ash"
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"esbenp.prettier-vscode"
	],
	// "workspaceMount": "source=${localWorkspaceFolder},target=/app,type=bind,consistency=cached",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
 	"remoteUser": "node"
}
